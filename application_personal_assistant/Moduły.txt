Lista klas/modułów:

Main:
Contacts:

Birthday:
	input: 
		lista słowników, w których kluczem jest nazwa kontaktu, a wartością data urodzenia, przykład: contacts_birth = [{"name1": "efwefew", "birthday1": "2343-3-32"}, {"name2":" erwerwe", "birthday2": "2322-3-34"}, ....]
	output:
		podlista listy contacts_birth, której elementami są słowniki, w których data jest oddalona od bieżącej o n dni, przykład: result = [{"name2": "birthday2"}, ....]

Data_verification:
	input:
		słownik: {"tel.": string_z_num_tel, "email" : "string_z_e_mail"}
	output:
		słownik: {"tel.": True/False, "email": True/False

Podpowiedzi:
	input:
		zły keyword: string
	output:
		dobry keyword: string

Notes:
	input:
		lista słowników, w których kluczem jest nazwa kontaktu, a wartością lista notatek, przykład: contacts_notes = [{"name1": ["etesdg", "strt"]}, {"name2": ["weewr", "erew werwrwr", "grgeg seterhytjtr ewrtree eterte", "nie lubię go"]}, ....]
	output:
		lista słowników, w których kluczem jest nazwa kontaktu, a wartością zmodyfikowana lista notatek, przykład: contacts_notes = [{"name1": ["etesdg", "strt"]}, {"name2": ["weewr", "erew werwrwr", "grgeg seterhytjtr ewrtree eterte", "nie lubię go"]}, ....]

Uwagi:
Głową za to nie ręczę :)
Zakładam, że wydobycie informacji pochodzących od użytkownika, niezbędnych do realizacji zadania danego modułu, też będzie znajdowało się w danym module. Inaczej mówiąc, każdy moduł, w razie potrzeby, może komunikować się z użytkownikiem poprzez funkcję input(). Chodzi o takie rzeczy jak: co chce użytkownik konkretnie robić z notatkami w module Notes, liczba dni w module Birthday, itp.
